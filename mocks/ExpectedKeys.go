// Code generated by mockery v2.42.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ExpectedKeys is an autogenerated mock type for the ExpectedKeys type
type ExpectedKeys struct {
	mock.Mock
}

type ExpectedKeys_Expecter struct {
	mock *mock.Mock
}

func (_m *ExpectedKeys) EXPECT() *ExpectedKeys_Expecter {
	return &ExpectedKeys_Expecter{mock: &_m.Mock}
}

// FromVals provides a mock function with given fields: name, blockOutputs
func (_m *ExpectedKeys) FromVals(name string, blockOutputs map[string]string) (string, error) {
	ret := _m.Called(name, blockOutputs)

	if len(ret) == 0 {
		panic("no return value specified for FromVals")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, map[string]string) (string, error)); ok {
		return rf(name, blockOutputs)
	}
	if rf, ok := ret.Get(0).(func(string, map[string]string) string); ok {
		r0 = rf(name, blockOutputs)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, map[string]string) error); ok {
		r1 = rf(name, blockOutputs)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExpectedKeys_FromVals_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FromVals'
type ExpectedKeys_FromVals_Call struct {
	*mock.Call
}

// FromVals is a helper method to define mock.On call
//   - name string
//   - blockOutputs map[string]string
func (_e *ExpectedKeys_Expecter) FromVals(name interface{}, blockOutputs interface{}) *ExpectedKeys_FromVals_Call {
	return &ExpectedKeys_FromVals_Call{Call: _e.mock.On("FromVals", name, blockOutputs)}
}

func (_c *ExpectedKeys_FromVals_Call) Run(run func(name string, blockOutputs map[string]string)) *ExpectedKeys_FromVals_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(map[string]string))
	})
	return _c
}

func (_c *ExpectedKeys_FromVals_Call) Return(_a0 string, _a1 error) *ExpectedKeys_FromVals_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *ExpectedKeys_FromVals_Call) RunAndReturn(run func(string, map[string]string) (string, error)) *ExpectedKeys_FromVals_Call {
	_c.Call.Return(run)
	return _c
}

// NewExpectedKeys creates a new instance of ExpectedKeys. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewExpectedKeys(t interface {
	mock.TestingT
	Cleanup(func())
}) *ExpectedKeys {
	mock := &ExpectedKeys{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
